# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: build

on:
  push:
    branches: [ feature/*, release/*, master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    if: ${{ github.event.pull_request.merged == true || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - run: sudo apt-get install xvfb
      - name: Unit Tests
        run: xvfb-run --auto-servernum mvn -B test jacoco:report -P jacoco --file pom.xml
        env:
          CI: true
      - name: Cleanup xvfb pidx
        uses: bcomnes/cleanup-xvfb@v1

      - name: Build with Maven
        run: mvn -B package -U -DskipTests=true --file pom.xml

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: SonarCloud Scan
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=jaehoo_oz-ex-atm-desc \
            -Dsonar.test.inclusions=src/java/test/**/* \
            -Dsonar.coverage.exclusions=com/oz/atm/gui/* \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
